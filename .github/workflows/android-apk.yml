name: Android APK

on:
  workflow_dispatch:
    inputs:
      publish:
        description: "Publier sur GitHub Pages (lien direct)"
        required: false
        default: "true"
  push:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Flutter pub get
        run: flutter pub get

      - name: Flutter format (dry run)
        run: flutter format --set-exit-if-changed .

      - name: Analyze
        run: flutter analyze

      - name: Test
        run: flutter test --no-pub

      - name: Prepare keystore (if secrets provided)
        if: ${{ env.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          mkdir -p android/app
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > android/app/keystore.jks
          cat > android/key.properties <<EOF
          storeFile=keystore.jks
          storePassword=${ANDROID_KEYSTORE_PASSWORD}
          keyAlias=${ANDROID_KEY_ALIAS}
          keyPassword=${ANDROID_KEY_PASSWORD}
          EOF

      - name: Build release APK
        run: flutter build apk --release

      - name: Collect artifact
        run: |
          mkdir -p dist
          cp build/app/outputs/flutter-apk/app-release.apk dist/pelerinage_msm.apk

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: pelerinage_msm-apk
          path: dist/pelerinage_msm.apk
          if-no-files-found: error

  pages:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: pelerinage_msm-apk
          path: public

      - name: Create index.html
        run: |
          cat > public/index.html <<'HTML'
          <!doctype html>
          <html lang="fr">
          <head>
            <meta charset="utf-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <title>Télécharger l’APK — Pèlerinage MSM</title>
            <style>
              body{font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif; margin:40px; color:#0b1d26}
              a.btn{display:inline-block; padding:12px 18px; background:#1692AD; color:#fff; text-decoration:none; border-radius:8px}
              .hint{margin-top:12px; color:#555}
            </style>
          </head>
          <body>
            <h1>Pèlerinage Saint‑Michel — APK Android</h1>
            <p>
              <a class="btn" href="pelerinage_msm.apk" download>➡️ Télécharger l’APK</a>
            </p>
            <p class="hint">Depuis Android, autorisez l’installation de sources inconnues si demandé.</p>
          </body>
          </html>
          HTML

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Show deployment URL
        run: |
          echo "Deployed to: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
          echo "::notice title=Pages URL::${{ steps.deployment.outputs.page_url }}"

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: pelerinage_msm-apk
          path: .

      - name: Create GitHub Release (on tag only)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: pelerinage_msm.apk
          fail_on_unmatched_files: true
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
