name: Android APK

on:
  workflow_dispatch:
    inputs:
      publish:
        description: "Publier sur GitHub Pages (lien direct)"
        required: false
        default: "true"
  push:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Flutter pub get
        run: flutter pub get

      - name: Flutter format (dry run)
        run: flutter format --set-exit-if-changed .

      - name: Analyze
        run: flutter analyze

      - name: Test
        run: flutter test --no-pub

      - name: Prepare keystore (if secrets provided)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          mkdir -p android/app
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > android/app/keystore.jks
          cat > android/key.properties <<EOF
          storeFile=keystore.jks
          storePassword=${ANDROID_KEYSTORE_PASSWORD}
          keyAlias=${ANDROID_KEY_ALIAS}
          keyPassword=${ANDROID_KEY_PASSWORD}
          EOF

      - name: Build release APK
        run: flutter build apk --release

      - name: Collect artifact
        run: |
          mkdir -p dist
          cp build/app/outputs/flutter-apk/app-release.apk dist/pelerinage_msm.apk

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: pelerinage_msm-apk
          path: dist/pelerinage_msm.apk
          if-no-files-found: error
    outputs:
      publish: ${{ inputs.publish || 'true' }}

  pages:
    needs: build
    if: needs.build.outputs.publish == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: pelerinage_msm-apk
          path: public

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: pelerinage_msm-apk
          path: .

      - name: Create GitHub Release (on tag only)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: pelerinage_msm.apk
          fail_on_unmatched_files: true
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

